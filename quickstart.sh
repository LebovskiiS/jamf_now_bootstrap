#!/usr/bin/env bash
set -euo pipefail

# Minimal interactive wrapper for bootstrap.sh
# - Detects macOS and suggests the matching mofileconfigs baseline
# - Prompts for optional Open Enrollment URL and Slack webhook
# - Writes .env and invokes bootstrap

REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ENV_FILE="${REPO_ROOT}/.env"
BOOTSTRAP="${REPO_ROOT}/bootstrap.sh"

if [[ ! -x "$BOOTSTRAP" ]]; then
  echo "ERROR: bootstrap.sh not found or not executable. Run: chmod +x bootstrap.sh" >&2
  exit 1
fi

if [[ "$(uname -s)" != "Darwin" ]]; then
  echo "ERROR: macOS required." >&2
  exit 1
fi

# --- Detect macOS and suggest codename
product_ver="$(sw_vers -productVersion || true)"
major="${product_ver%%.*}"
detected="sequoia" # default guess for newest

case "$major" in
  15) detected="sequoia" ;;
  14) detected="sonoma"  ;;
  13) detected="ventura" ;;
  *)  detected="sequoia"  ;; # prefer latest baseline when unknown
esac

echo
echo "macOS detected: ${product_ver}  (suggested baseline: ${detected})"
echo "Supported baselines: sequoia (15), sonoma (14), ventura (13)"
echo "If your device is older than these, please upgrade to one of them (ideally the latest)."
echo

read -r -p "Baseline to use [sequoia/sonoma/ventura] (default: ${detected}): " CHOICE
CHOICE="${CHOICE:-$detected}"
case "$CHOICE" in
  sequoia|sonoma|ventura) ;;
  *) echo "Unknown choice '${CHOICE}', falling back to '${detected}'"; CHOICE="$detected" ;;
esac

BASELINE_DIR="mofileconfigs/macos/${CHOICE}"
if [[ ! -d "$BASELINE_DIR" ]]; then
  echo "ERROR: Baseline directory not found: ${BASELINE_DIR}" >&2
  echo "Make sure your .mobileconfig files exist under: ${BASELINE_DIR}" >&2
  exit 1
fi

# --- Optional enrollment URL (Jamf Now/Open Enrollment)
read -r -p "Open Enrollment URL (optional, e.g. https://go.jamfnow.com/XXXXX): " ENROLL_URL
ENROLL_URL="${ENROLL_URL:-}"

# --- Optional Slack webhook for success notice
read -r -p "Slack webhook URL (optional): " SLACK_WEBHOOK_URL
SLACK_WEBHOOK_URL="${SLACK_WEBHOOK_URL:-}"

# --- Write .env (overwrites)
cat > "$ENV_FILE" <<EOF
# Generated by quickstart.sh
ENROLL_PROFILE_URL="${ENROLL_URL}"
BASELINE_DIR="${BASELINE_DIR}"
SLACK_WEBHOOK_URL="${SLACK_WEBHOOK_URL}"
EOF

echo
echo "Wrote ${ENV_FILE}:"
cat "$ENV_FILE"
echo

# --- Run bootstrap with explicit flags; it will also source .env
echo "Running bootstrap..."
exec sudo -E "$BOOTSTRAP" --baseline-dir "$BASELINE_DIR" ${ENROLL_URL:+--enroll-url "$ENROLL_URL"}
